{"data":{"site":{"siteMetadata":{"testTemplate":"from wasabi import Printer\n__msg__ = Printer()\n__solution__ = \"\"\"${solution}\"\"\"\n\n${solution}\n\n${test}\n\ntry:\n    test()\nexcept AssertionError as e:\n    __msg__.fail(e)","juniper":{"repo":"ines/course-starter-python","branch":"binder","kernelType":"python3","lang":"python","debug":false}}},"allCode":{"edges":[{"node":{"name":"exc_01_03","code":"import json\n\n# This code will run relative to the root of the repo, so we can load files\nwith open(\"exercises/bookquotes.json\") as f:\n    DATA = json.loads(f.read())\n\n# Print the first record in the DATA\nprint(___[____])\n\n# Assign the length of DATA to some_var\nsome_var = ___\n"}},{"node":{"name":"solution_01_03","code":"import json\n\n# This code will run relative to the root of the repo, so we can load files\nwith open(\"exercises/bookquotes.json\") as f:\n    DATA = json.loads(f.read())\n\n# Print the first record in the DATA\nprint(DATA[0])\n\n# Assign the length of DATA to some_var\nsome_var = len(DATA)\n"}},{"node":{"name":"test_01_03","code":"def test():\n    # Here we can either check objects created in the solution code, or the\n    # string value of the solution, available as __solution__. A helper for\n    # printing formatted messages is available as __msg__. See the testTemplate\n    # in the meta.json for details.\n\n    # If an assertion fails, the message will be displayed\n    assert \"print(DATA[0])\" in __solution__, \"Are you printing the first record?\"\n    assert some_var == len(DATA), \"Are you getting the correct length?\"\n\n    __msg__.good(\"Well done!\")\n"}}]}}}